# core/common/log.py ‚Äî –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ v0.0.3
import logging
import os
from logging.handlers import RotatingFileHandler
from config import LOGGING, PATHS

# === üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –ª–æ–≥–≥–µ—Ä–∞ –ø—Ä–æ–µ–∫—Ç–∞ ===

LOG_FILE = os.path.join(PATHS["logs_dir"], "endi.log")
os.makedirs(PATHS["logs_dir"], exist_ok=True)

# –°–æ–∑–¥–∞—ë–º —Ö—ç–Ω–¥–ª–µ—Ä —Å —Ä–æ—Ç–∞—Ü–∏–µ–π –ª–æ–≥–æ–≤
handler = RotatingFileHandler(
    LOG_FILE,
    maxBytes=LOGGING.get("max_log_size", 5 * 1024 * 1024),  # 5 MB
    backupCount=LOGGING.get("backup_count", 5),
    encoding="utf-8"
)

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ñ–æ—Ä–º–∞—Ç—Ç–µ—Ä–∞
formatter = logging.Formatter(LOGGING.get("log_format", "[%(asctime)s] %(levelname)s: %(message)s"))
handler.setFormatter(formatter)

# –û—Å–Ω–æ–≤–Ω–æ–π –ª–æ–≥–≥–µ—Ä
base_logger = logging.getLogger("EndiLogger")
base_logger.setLevel(getattr(logging, LOGGING.get("log_level", "DEBUG")))
base_logger.addHandler(handler)
base_logger.propagate = False


# === üîπ –£—Ç–∏–ª–∏—Ç—ã –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è ===
def log_info(message: str):
    """–ó–∞–ø–∏—Å—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è."""
    base_logger.info(message)


def log_error(message: str):
    """–ó–∞–ø–∏—Å—å –æ—à–∏–±–∫–∏."""
    base_logger.error(message)


def log_debug(message: str):
    """–ó–∞–ø–∏—Å—å –æ—Ç–ª–∞–¥–æ—á–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è."""
    base_logger.debug(message)


# === üîπ –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –º–µ—Ç–æ–¥ –ø–æ–ª—É—á–µ–Ω–∏—è –ª–æ–≥–≥–µ—Ä–∞ ===
def get_logger(name: str) -> logging.Logger:
    """
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ª–æ–≥–≥–µ—Ä –¥–ª—è –º–æ–¥—É–ª—è –ø–æ –∏–º–µ–Ω–∏.
    –í—Å–µ –ª–æ–≥–≥–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑—É—é—Ç –æ–±—â—É—é –Ω–∞—Å—Ç—Ä–æ–π–∫—É –∏ —Ä–æ—Ç–∞—Ü–∏—é.
    """
    logger = logging.getLogger(name)
    if not logger.handlers:  # –ß—Ç–æ–±—ã –Ω–µ –¥—É–±–ª–∏—Ä–æ–≤–∞—Ç—å —Ö–µ–Ω–¥–ª–µ—Ä—ã
        logger.setLevel(base_logger.level)
        logger.addHandler(handler)
        logger.propagate = False
    return logger
